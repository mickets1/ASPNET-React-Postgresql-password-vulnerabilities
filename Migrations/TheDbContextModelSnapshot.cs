// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebAPI.Db;

#nullable disable

namespace WebAPI.Migrations
{
    [DbContext(typeof(TheDbContext))]
    partial class TheDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebAPI.Models.Category", b =>
                {
                    b.Property<int>("Category_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Category_id"));

                    b.Property<string>("Category_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Category_id");

                    b.ToTable("Categories", (string)null);
                });

            modelBuilder.Entity("WebAPI.Models.Password", b =>
                {
                    b.Property<int>("Password_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Password_id"));

                    b.Property<int>("Category_id")
                        .HasColumnType("integer");

                    b.Property<int>("Font_size")
                        .HasColumnType("integer");

                    b.Property<float>("Offline_crack_sec")
                        .HasColumnType("real");

                    b.Property<string>("Password_value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Rank_alt")
                        .HasColumnType("integer");

                    b.Property<int>("Strength")
                        .HasColumnType("integer");

                    b.Property<int>("Time_unit_id")
                        .HasColumnType("integer");

                    b.Property<float>("Value")
                        .HasColumnType("real");

                    b.HasKey("Password_id");

                    b.HasIndex("Category_id");

                    b.HasIndex("Time_unit_id");

                    b.ToTable("Passwords", (string)null);
                });

            modelBuilder.Entity("WebAPI.Models.TimeUnit", b =>
                {
                    b.Property<int>("Time_unit_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Time_unit_id"));

                    b.Property<string>("Time_unit_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Time_unit_id");

                    b.ToTable("Time_units", (string)null);
                });

            modelBuilder.Entity("WebAPI.Models.Password", b =>
                {
                    b.HasOne("WebAPI.Models.Category", "Category")
                        .WithMany("Passwords")
                        .HasForeignKey("Category_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI.Models.TimeUnit", "TimeUnit")
                        .WithMany("Passwords")
                        .HasForeignKey("Time_unit_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("TimeUnit");
                });

            modelBuilder.Entity("WebAPI.Models.Category", b =>
                {
                    b.Navigation("Passwords");
                });

            modelBuilder.Entity("WebAPI.Models.TimeUnit", b =>
                {
                    b.Navigation("Passwords");
                });
#pragma warning restore 612, 618
        }
    }
}
